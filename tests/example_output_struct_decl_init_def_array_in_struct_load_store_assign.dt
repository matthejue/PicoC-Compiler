Tree(Token('RULE', 'file'), [Token('NAME', 'example_output_struct_decl_init_def_array_in_struct_load_store_assign'), Tree(Token('RULE', 'decls_defs'), [Tree(Token('RULE', 'struct_decl'), [Token('NAME', 'array_with_len'), Tree(Token('RULE', 'struct_params'), [Token('SIZE_QUAL', 'int'), Tree(Token('RULE', 'pntr_decl'), [Tree(Token('RULE', 'pntr_deg'), [Token('STAR', '*')]), Tree(Token('RULE', 'array_decl'), [Token('NAME', 'ar_pntr'), Tree(Token('RULE', 'array_dims'), [])])]), Token('SIZE_QUAL', 'int'), Tree(Token('RULE', 'pntr_decl'), [Tree(Token('RULE', 'pntr_deg'), []), Tree(Token('RULE', 'array_decl'), [Token('NAME', 'len'), Tree(Token('RULE', 'array_dims'), [])])])])]), Tree(Token('RULE', 'struct_decl'), [Token('NAME', 'array_with_fixed_len'), Tree(Token('RULE', 'struct_params'), [Token('SIZE_QUAL', 'int'), Tree(Token('RULE', 'pntr_decl'), [Tree(Token('RULE', 'pntr_deg'), []), Tree(Token('RULE', 'array_decl'), [Token('NAME', 'ar_pntr'), Tree(Token('RULE', 'array_dims'), [Token('NUM', '3')])])]), Token('SIZE_QUAL', 'int'), Tree(Token('RULE', 'pntr_decl'), [Tree(Token('RULE', 'pntr_deg'), []), Tree(Token('RULE', 'array_decl'), [Token('NAME', 'len'), Tree(Token('RULE', 'array_dims'), [])])])])]), Tree(Token('RULE', 'fun_def'), [Token('SIZE_QUAL', 'void'), Token('NAME', 'main'), Tree(Token('RULE', 'fun_params'), []), Tree(Token('RULE', 'decl_exec_stmts'), [Tree(Token('RULE', 'array_init'), [Token('SIZE_QUAL', 'int'), Tree(Token('RULE', 'array_init_decl'), [Token('NAME', 'ar'), Tree(Token('RULE', 'array_dims'), [Token('NUM', '3')])]), Tree(Token('RULE', 'array_subexps'), [Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NUM', '1')])])]), Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NUM', '2')])])]), Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NUM', '3')])])])])]), Tree(Token('RULE', 'struct_init'), [Tree(Token('RULE', 'struct_spec'), [Token('NAME', 'array_with_len')]), Token('NAME', 'array'), Tree(Token('RULE', 'struct_subexps'), [Token('NAME', 'ar_pntr'), Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NAME', 'ar')])])]), Token('NAME', 'len'), Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NUM', '3')])])])])]), Tree(Token('RULE', 'alloc'), [Token('SIZE_QUAL', 'int'), Tree(Token('RULE', 'pntr_decl'), [Tree(Token('RULE', 'pntr_deg'), []), Tree(Token('RULE', 'array_decl'), [Token('NAME', 'i'), Tree(Token('RULE', 'array_dims'), [])])])]), Tree(Token('RULE', 'alloc'), [Tree(Token('RULE', 'struct_spec'), [Token('NAME', 'array_with_fixed_len')]), Tree(Token('RULE', 'pntr_decl'), [Tree(Token('RULE', 'pntr_deg'), []), Tree(Token('RULE', 'array_decl'), [Token('NAME', 'array2'), Tree(Token('RULE', 'array_dims'), [])])])]), Tree(Token('RULE', 'var_assign'), [Token('NAME', 'i'), Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NUM', '0')])])])]), Tree(Token('RULE', 'while_stmt'), [Tree(Token('RULE', 'logic_or'), [Tree(Token('RULE', 'logic_and'), [Tree(Token('RULE', 'logic_atom'), [Tree(Token('RULE', 'to_bool'), [Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NAME', 'i')])])])]), Token('RELATION', '<'), Tree(Token('RULE', 'to_bool'), [Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Tree(Token('RULE', 'struct_attr'), [Token('NAME', 'array'), Token('NAME', 'len')])])])])])])])]), Tree(Token('RULE', 'exec_stmts'), [Tree(Token('RULE', 'print_stmt'), [Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Tree(Token('RULE', 'array_subscr'), [Tree(Token('RULE', 'struct_attr'), [Token('NAME', 'array'), Token('NAME', 'ar_pntr')]), Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NAME', 'i')])])])])])])])]), Tree(Token('RULE', 'var_assign'), [Token('NAME', 'i'), Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NAME', 'i')])]), Token('PREC2_OP', '+'), Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NUM', '1')])])])])])]), Tree(Token('RULE', 'subscr_assign'), [Tree(Token('RULE', 'array_subscr'), [Tree(Token('RULE', 'struct_attr'), [Token('NAME', 'array2'), Token('NAME', 'ar_pntr')]), Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NUM', '0')])])])]), Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Tree(Token('RULE', 'array_subscr'), [Tree(Token('RULE', 'struct_attr'), [Token('NAME', 'array'), Token('NAME', 'ar_pntr')]), Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NUM', '0')])])])])])]), Token('PREC2_OP', '+'), Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NUM', '1')])])])]), Tree(Token('RULE', 'subscr_assign'), [Tree(Token('RULE', 'array_subscr'), [Tree(Token('RULE', 'struct_attr'), [Token('NAME', 'array2'), Token('NAME', 'ar_pntr')]), Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NUM', '1')])])])]), Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Tree(Token('RULE', 'array_subscr'), [Tree(Token('RULE', 'struct_attr'), [Token('NAME', 'array'), Token('NAME', 'ar_pntr')]), Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NUM', '1')])])])])])]), Token('PREC2_OP', '+'), Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NUM', '1')])])])]), Tree(Token('RULE', 'subscr_assign'), [Tree(Token('RULE', 'array_subscr'), [Tree(Token('RULE', 'struct_attr'), [Token('NAME', 'array2'), Token('NAME', 'ar_pntr')]), Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NUM', '2')])])])]), Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Tree(Token('RULE', 'array_subscr'), [Tree(Token('RULE', 'struct_attr'), [Token('NAME', 'array'), Token('NAME', 'ar_pntr')]), Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NUM', '2')])])])])])]), Token('PREC2_OP', '+'), Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NUM', '1')])])])]), Tree(Token('RULE', 'attribute_assign'), [Tree(Token('RULE', 'struct_attr'), [Token('NAME', 'array2'), Token('NAME', 'len')]), Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Tree(Token('RULE', 'struct_attr'), [Token('NAME', 'array'), Token('NAME', 'len')])])])])]), Tree(Token('RULE', 'var_assign'), [Token('NAME', 'i'), Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NUM', '0')])])])]), Tree(Token('RULE', 'while_stmt'), [Tree(Token('RULE', 'logic_or'), [Tree(Token('RULE', 'logic_and'), [Tree(Token('RULE', 'logic_atom'), [Tree(Token('RULE', 'to_bool'), [Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NAME', 'i')])])])]), Token('RELATION', '<'), Tree(Token('RULE', 'to_bool'), [Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Tree(Token('RULE', 'struct_attr'), [Token('NAME', 'array2'), Token('NAME', 'len')])])])])])])])]), Tree(Token('RULE', 'exec_stmts'), [Tree(Token('RULE', 'print_stmt'), [Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Tree(Token('RULE', 'array_subscr'), [Tree(Token('RULE', 'struct_attr'), [Token('NAME', 'array2'), Token('NAME', 'ar_pntr')]), Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NAME', 'i')])])])])])])])]), Tree(Token('RULE', 'var_assign'), [Token('NAME', 'i'), Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NAME', 'i')])]), Token('PREC2_OP', '+'), Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NUM', '1')])])])])])])])])])])