# File no_warning_atomic_assignment_int_variable_char Start
# Main Funktion (void main ((char car) = 99) ... ) Start
LOADI SP 200;
# Zuweisung ((char car) = 99) Start
# Allokation (char car) Start
# Variable car vom Typ char mit Adresse 100 zur Symboltabelle hinzugef端gt
# Allokation (char car) Ende
# Arithmetischer Operand 99 Start
SUBI SP 1;                             # Stack um eine Zelle erweitern
LOADI ACC 99;                          # Wert von 99 in ACC laden
STOREIN SP ACC 1;                      # Wert in oberste Stacke-Zelle
# Arithmetischer Operand 99 Ende
LOADIN SP ACC 1;                       # Wert von '99' in ACC laden
ADDI SP 1;                             # Stack um eine Zelle verk端rzen
STORE ACC 100;                         # Wert '99' in Variable 'car' speichern
# Zuweisung ((char car) = 99) Ende
# Zuweisung ((int var) = car) Start
# Allokation (int var) Start
# Variable var vom Typ int mit Adresse 101 zur Symboltabelle hinzugef端gt
# Allokation (int var) Ende
# Arithmetischer Operand car Start
SUBI SP 1;                             # Stack um eine Zelle erweitern
LOAD ACC 100;                          # Wert von car in ACC laden
STOREIN SP ACC 1;                      # Wert in oberste Stacke-Zelle
# Arithmetischer Operand car Ende
LOADIN SP ACC 1;                       # Wert von 'car' in ACC laden
ADDI SP 1;                             # Stack um eine Zelle verk端rzen
STORE ACC 101;                         # Wert 'car' in Variable 'var' speichern
# Zuweisung ((int var) = car) Ende
JUMP 0;
# Main Funktion (void main ((char car) = 99) ... ) Ende
# File no_warning_atomic_assignment_int_variable_char Ende
