File
  Name('example_output_fun_def_return_and_param_char_int_pntr_array_struct_rec_call')
  [
    StructDecl
      Name('array_with_len')
      [
        Param
          IntType('int')
          PntrDecl
            Num('0')
            ArrayDecl
              Name('ar')
              [
                Num('3')
              ]
        Param
          IntType('int')
          PntrDecl
            Num('0')
            ArrayDecl
              Name('len')
              []
      ]
    FunDecl
      VoidType('void')
      Name('print_all')
      [
        Param
          IntType('int')
          PntrDecl
            Num('0')
            ArrayDecl
              Name('i')
              []
        Param
          IntType('int')
          PntrDecl
            Num('0')
            ArrayDecl
              Name('ar')
              [
                Num('3')
              ]
        Param
          StructSpec
            Name('array_with_len')
          PntrDecl
            Num('0')
            ArrayDecl
              Name('st_ar_copy')
              []
      ]
    FunDecl
      IntType('int')
      Name('print_all_pntr')
      [
        Param
          IntType('int')
          PntrDecl
            Num('1')
            ArrayDecl
              Name('len_ref')
              []
        Param
          IntType('int')
          PntrDecl
            Num('1')
            ArrayDecl
              Name('ar_ref')
              []
        Param
          StructSpec
            Name('array_with_len')
          PntrDecl
            Num('1')
            ArrayDecl
              Name('st_ar_ref')
              []
      ]
    FunDef
      VoidType('void')
      Name('main')
      []
      [
        Block
          Name('main.2')
          [
            Assign
              Alloc
                Writeable
                IntType('int')
                PntrDecl
                  Num('0')
                  ArrayDecl
                    Name('ar')
                    [
                      Num('3')
                    ]
              Array
                Array
                  [
                    Num('1')
                    Num('2')
                    Num('3')
                  ]
            Assign
              Alloc
                Writeable
                StructSpec
                  Name('array_with_len')
                PntrDecl
                  Num
                  ArrayDecl
                    Name('st_ar')
                    []
              Struct
                [
                  Assign
                    Name('ar')
                    Array
                      [
                        Num('4')
                        Num('5')
                        Num('6')
                      ]
                  Assign
                    Name('len')
                    Num('3')
                ]
            Alloc
              Writeable
              IntType('int')
              PntrDecl
                Num('0')
                ArrayDecl
                  Name('len')
                  []
            Alloc
              Writeable
              IntType('int')
              PntrDecl
                Num('0')
                ArrayDecl
                  Name('success')
                  []
            Exp
              Call
                Name('print_all')
                [
                  Num('3')
                  Num('3')
                  Num('3')
                ]
            Call
              Name('print')
              Subscr
                Name('ar')
                Num('2')
            Assign
              Name('len')
              Num('3')
            Assign
              Name('success')
              Call
                Name('print_all_pntr')
                [
                  Ref
                    Name('len')
                  Name('ar')
                  Ref
                    Name('st_ar')
                ]
            Call
              Name('print')
              Subscr
                Name('ar')
                Num('2')
            If
              Name('success')
              [
                GoTo
                  Name('if.1')
              ]
          ]
        Block
          Name('if.1')
          [
            Call
              Name('print')
              UnOp
                Minus('-')
                Num('1')
            GoTo
              Name('if_else_after.0')
          ]
        Block
          Name('if_else_after.0')
          []
      ]
    FunDef
      VoidType('void')
      Name('print_all')
      [
        Param
          IntType('int')
          PntrDecl
            Num('0')
            ArrayDecl
              Name('len_copy')
              []
        Param
          IntType('int')
          PntrDecl
            Num('0')
            ArrayDecl
              Name('ar_copy')
              [
                Num('3')
              ]
        Param
          StructSpec
            Name('array_with_len')
          PntrDecl
            Num('0')
            ArrayDecl
              Name('st_ar_copy')
              []
      ]
      [
        Block
          Name('print_all.9')
          [
            Assign
              Alloc
                Writeable
                IntType('int')
                PntrDecl
                  Num('0')
                  ArrayDecl
                    Name('i')
                    []
              Num('0')
            GoTo
              Name('condition_check.8')
          ]
        Block
          Name('condition_check.8')
          [
            IfElse
              Atom
                Name('i')
                Lt('<')
                Name('len_copy')
              GoTo
                Name('while_branch.7')
              GoTo
                Name('while_after.6')
          ]
        Block
          Name('while_branch.7')
          [
            Call
              Name('print')
              Subscr
                Name('ar_copy')
                Name('i')
            Assign
              Name('i')
              BinOp
                Name('i')
                Add('+')
                Num('1')
            GoTo
              Name('condition_check.8')
          ]
        Block
          Name('while_after.6')
          [
            Assign
              Name('i')
              Num('0')
            Assign
              Name('tmp.1)')
              Attr
                Name('st_ar_copy')
                Name('len')
            GoTo
              Name('condition_check.5')
          ]
        Block
          Name('condition_check.5')
          [
            IfElse
              Atom
                Name('i')
                Lt('<')
                Name('tmp.1)')
              GoTo
                Name('while_branch.4')
              GoTo
                Name('while_after.3')
          ]
        Block
          Name('while_branch.4')
          [
            Call
              Name('print')
              Subscr
                Attr
                  Name('st_ar_copy')
                  Name('ar')
                Name('i')
            Assign
              Name('i')
              BinOp
                Name('i')
                Add('+')
                Num('1')
            GoTo
              Name('condition_check.5')
          ]
        Block
          Name('while_after.3')
          [
            Assign
              Subscr
                Name('ar_copy')
                Num('2')
              Call
                Name('input')
                []
          ]
      ]
    FunDef
      IntType('int')
      Name('print_all_pntr')
      [
        Param
          IntType('int')
          PntrDecl
            Num('1')
            ArrayDecl
              Name('len_ref')
              []
        Param
          IntType('int')
          PntrDecl
            Num('1')
            ArrayDecl
              Name('ar_ref')
              []
        Param
          StructSpec
            Name('array_with_len')
          PntrDecl
            Num('1')
            ArrayDecl
              Name('st_ar_ref')
              []
      ]
      [
        Block
          Name('print_all_pntr.16')
          [
            Assign
              Alloc
                Writeable
                IntType('int')
                PntrDecl
                  Num('0')
                  ArrayDecl
                    Name('i')
                    []
              Num('0')
            Assign
              Subscr
                Name('ar_ref')
                Num('2')
              Num('3')
            Assign
              Name('tmp.2)')
              Deref
                Name('len_ref')
                Num
            GoTo
              Name('condition_check.15')
          ]
        Block
          Name('condition_check.15')
          [
            IfElse
              Atom
                Name('i')
                Lt('<')
                Name('tmp.2)')
              GoTo
                Name('while_branch.14')
              GoTo
                Name('while_after.13')
          ]
        Block
          Name('while_branch.14')
          [
            Call
              Name('print')
              Subscr
                Name('ar_ref')
                Name('i')
            Assign
              Name('i')
              BinOp
                Name('i')
                Add('+')
                Num('1')
            GoTo
              Name('condition_check.15')
          ]
        Block
          Name('while_after.13')
          [
            Assign
              Name('i')
              Num('0')
            Assign
              Name('tmp.3)')
              Deref
                Name('st_ar_ref')
                Num
            Assign
              Name('tmp.4)')
              Attr
                Name('tmp.3)')
                Name('len')
            GoTo
              Name('condition_check.12')
          ]
        Block
          Name('condition_check.12')
          [
            IfElse
              Atom
                Name('i')
                Lt('<')
                Name('tmp.4)')
              GoTo
                Name('while_branch.11')
              GoTo
                Name('while_after.10')
          ]
        Block
          Name('while_branch.11')
          [
            Call
              Name('print')
              Subscr
                Attr
                  Deref
                    Name('st_ar_ref')
                    Num
                  Name('ar')
                Name('i')
            Assign
              Name('i')
              BinOp
                Name('i')
                Add('+')
                Num('1')
            GoTo
              Name('condition_check.12')
          ]
        Block
          Name('while_after.10')
          [
            Return
              Num('1')
          ]
      ]
  ]