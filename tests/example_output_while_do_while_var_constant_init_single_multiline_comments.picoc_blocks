File
  Name('example_output_while_do_while_var_constant_init_single_multiline_comments')
  [
    FunDef
      VoidType('void')
      Name('main')
      []
      [
        Block
          Name('main.5')
          [
            Assign
              Alloc
                Writeable
                IntType('int')
                PntrDecl
                  Num('0')
                  ArrayDecl
                    Name('var')
                    []
              Num('0')
            Assign
              Alloc
                Const
                CharType('char')
                PntrDecl
                  Num
                  ArrayDecl
                    Name('var_const')
                    []
              Num('1')
            Assign
              Name('tmp.1)')
              Call
                Name('input')
                []
            GoTo
              Name('condition_check.4')
          ]
        Block
          Name('condition_check.4')
          [
            IfElse
              Atom
                Name('var')
                Lt('<')
                Name('tmp.1)')
              GoTo
                Name('while_branch.3')
              GoTo
                Name('while_after.2')
          ]
        Block
          Name('while_branch.3')
          [
            Assign
              Name('var')
              BinOp
                Name('var')
                Add('+')
                Num('1')
            GoTo
              Name('condition_check.4')
          ]
        Block
          Name('while_after.2')
          [
            Call
              Name('print')
              Name('var')
            Assign
              Name('tmp.2)')
              Call
                Name('input')
                []
            GoTo
              Name('do_while_branch.1')
          ]
        Block
          Name('do_while_branch.1')
          [
            Assign
              Name('var')
              BinOp
                Name('var')
                Add('+')
                Name('var_const')
            IfElse
              Atom
                Name('var')
                Lt('<')
                Name('tmp.2)')
              GoTo
                Name('do_while_branch.1')
              GoTo
                Name('do_while_after.0')
          ]
        Block
          Name('do_while_after.0')
          [
            Call
              Name('print')
              Name('var')
          ]
      ]
  ]