# File 'warning_atomic_assignment_char_int_const_variable' Start
# Main Funktion '(void main ((const int var1) = 1024) ... )' Start
LOADI SP 200;
# Zuweisung '((const int var1) = 1024)' Start
# Allokation '(const int var1)' Start
# Konstante 'var1' vom Typ 'int' zur Symboltabelle hinzugefügt
# Allokation '(const int var1)' Ende
# Konstante 'var1' in Symboltabelle den Wert '1024' zugewiesen
# Zuweisung '((const int var1) = 1024)' Ende
# Zuweisung '((char var2) = var1)' Start
# Allokation '(char var2)' Start
# Variable 'var2' vom Typ 'char' mit Adresse '100' zur Symboltabelle hinzugefügt
# Allokation '(char var2)' Ende
# Arithmetischer Operand 'var1' Start
SUBI SP 1;                             # Stack um eine Zelle erweitern
LOADI ACC 1024;                        # Wert von 'var1' in ACC laden
STOREIN SP ACC 1;                      # Wert in oberste Stack-Zelle
# Arithmetischer Operand 'var1' Ende
LOADIN SP ACC 1;                       # Wert von 'var1' in ACC laden
ADDI SP 1;                             # Stack um eine Zelle verkürzen
# Implizite Konversion von 'int' zu 'char' Start
LOADI IN1 255;                         # Bitmaske '00000000_00000000_00000000_11111111' für char Datentyp erstellen
AND ACC IN1;                           # Wo in der Bitmaske eine '0' ist, werden die Bits ebenfalls zu '0'
LOADI IN2 128;                         # Bitvektor '__000000_00000000_10000000' laden
AND ACC IN1;                           # Testen, ob Zahl negativ, wenn sie nur 8-Bit lang wäre
JUMP== 3;                              # Signextension für negative Zahl überspringen, wenn Zahl nicht negativ ist
LOADI IN1 -256;                        # Bitsmaske '11111111_11111111_11111111_00000000' für signextension erstellen
OR ACC IN1;                            # Wo in der Bitmaske eine '1' ist, werden die Bits ebenfallls zu '1'
# Implizite Konversion von 'int' zu 'char' Ende
STORE ACC 100;                         # Wert 'var1' in Variable 'var2' speichern
# Zuweisung '((char var2) = var1)' Ende
JUMP 0;
# Main Funktion '(void main ((const int var1) = 1024) ... )' Ende
# File 'warning_atomic_assignment_char_int_const_variable' Ende
