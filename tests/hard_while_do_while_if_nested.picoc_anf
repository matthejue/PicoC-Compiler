File 
  Name './tests/hard_while_do_while_if_nested.picoc_anf', 
  [
    Block 
      Name 'global.8', 
      [], 
    Block 
      Name 'main.7', 
      [
        Exp(Call(Name('input'), []))
        Assign(Global(Num('0')), Stack(Num('1')))
        Exp(Call(Name('input'), []))
        Assign(Global(Num('1')), Stack(Num('1')))
        Exp(GoTo(Name('do_while_branch.6')))
      ], 
    Block 
      Name 'do_while_branch.6', 
      [
        Exp(GoTo(Name('condition_check.5')))
      ], 
    Block 
      Name 'condition_check.5', 
      [
        Exp(Global(Num('0')))
        Exp(Num('2'))
        Exp(Atom(Stack(Num('2')), Lt('<'), Stack(Num('1')))), 
        IfElse 
          Stack 
            Num '1', 
          [
            GoTo(Name('while_branch.4'))
          ], 
          [
            GoTo(Name('while_after.3'))
          ]
      ], 
    Block 
      Name 'while_branch.4', 
      [
        Exp(Global(Num('0')))
        Exp(Num('1'))
        Exp(BinOp(Stack(Num('2')), Add('+'), Stack(Num('1'))))
        Assign(Global(Num('0')), Stack(Num('1')))
        Exp(Global(Num('1')))
        Exp(Num('1'))
        Exp(BinOp(Stack(Num('2')), Add('+'), Stack(Num('1'))))
        Assign(Global(Num('1')), Stack(Num('1')))
        Exp(GoTo(Name('condition_check.5')))
      ], 
    Block 
      Name 'while_after.3', 
      [
        Exp(Global(Num('1')))
        Exp(Num('6'))
        Exp(Atom(Stack(Num('2')), Eq('=='), Stack(Num('1')))), 
        IfElse 
          Stack 
            Num '1', 
          [
            GoTo(Name('if.2'))
          ], 
          [
            GoTo(Name('if_else_after.1'))
          ]
      ], 
    Block 
      Name 'if.2', 
      [
        Exp(Global(Num('1')))
        Exp(Call(Name('print'), [Stack(Num('1'))]))
        Exp(GoTo(Name('if_else_after.1')))
      ], 
    Block 
      Name 'if_else_after.1', 
      [
        Exp(Global(Num('1')))
        Exp(Num('1'))
        Exp(BinOp(Stack(Num('2')), Sub('-'), Stack(Num('1'))))
        Assign(Global(Num('1')), Stack(Num('1')))
        Exp(Global(Num('1')))
        Exp(Num('4'))
        Exp(Atom(Stack(Num('2')), Gt('>'), Stack(Num('1')))), 
        IfElse 
          Stack 
            Num '1', 
          [
            GoTo(Name('do_while_branch.6'))
          ], 
          [
            GoTo(Name('do_while_after.0'))
          ]
      ], 
    Block 
      Name 'do_while_after.0', 
      [
        Exp(Global(Num('1')))
        Exp(Call(Name('print'), [Stack(Num('1'))]))
        Exp(Global(Num('0')))
        Exp(Call(Name('print'), [Stack(Num('1'))]))
        Return(Empty())
      ]
  ]