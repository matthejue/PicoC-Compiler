File
  Name('example_program_faculty')
  [
    FunDef
      IntType('int')
      Name('factorial')
      [
        Param
          IntType('int')
          PntrDecl
            Num('0')
            ArrayDecl
              Name('n')
              []
      ]
      [
        Block
          Name('factorial.3')
          [
            Alloc
              Writeable
              IntType('int')
              PntrDecl
                Num('0')
                ArrayDecl
                  Name('res_f')
                  []
            Alloc
              Writeable
              IntType('int')
              PntrDecl
                Num('0')
                ArrayDecl
                  Name('h')
                  []
            IfElse
              Atom
                Name('n')
                Eq('==')
                Num('1')
              [
                GoTo
                  Name('if.2')
              ]
              [
                GoTo
                  Name('else.1')
              ]
          ]
        Block
          Name('if.2')
          [
            Assign
              Name('res_f')
              Num('1')
            GoTo
              Name('if_else_after.0')
          ]
        Block
          Name('else.1')
          [
            Assign
              Name('h')
              Call
                Name('factorial')
                [
                  BinOp
                    Name('n')
                    Sub('-')
                    Num('1')
                ]
            Assign
              Name('res_f')
              BinOp
                Name('n')
                Add('*')
                Name('h')
            GoTo
              Name('if_else_after.0')
          ]
        Block
          Name('if_else_after.0')
          [
            Return
              Name('res_f')
          ]
      ]
    FunDef
      VoidType('void')
      Name('main')
      []
      [
        Block
          Name('main.4')
          [
            Assign
              Alloc
                Writeable
                IntType('int')
                PntrDecl
                  Num('0')
                  ArrayDecl
                    Name('arg')
                    []
              Call
                Name('input')
                []
            Alloc
              Writeable
              IntType('int')
              PntrDecl
                Num('0')
                ArrayDecl
                  Name('res')
                  []
            Call
              Name('print')
              Call
                Name('factorial')
                [
                  Name('arg')
                ]
            Assign
              Name('res')
              Call
                Name('factorial')
                [
                  Call
                    Name('input')
                    []
                ]
            Call
              Name('print')
              Name('res')
          ]
      ]
  ]