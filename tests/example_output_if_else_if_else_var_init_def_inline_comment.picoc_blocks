File
  Name('example_output_if_else_if_else_var_init_def_inline_comment')
  [
    FunDef
      VoidType('void')
      Name('main')
      []
      [
        Block
          Name('main.17')
          [
            Assign
              Alloc
                Writeable
                IntType('int')
                PntrDecl
                  Num('0')
                  ArrayDecl
                    Name('var')
                    []
              BinOp
                Call
                  Name('input')
                  []
                Add('+')
                Num('1')
            Alloc
              Writeable
              CharType('char')
              PntrDecl
                Num('0')
                ArrayDecl
                  Name('var2')
                  []
            Assign
              Alloc
                Writeable
                IntType('int')
                PntrDecl
                  Num('0')
                  ArrayDecl
                    Name('i')
                    []
              Num('1')
            GoTo
              Name('condition_check.16')
          ]
        Block
          Name('condition_check.16')
          [
            IfElse
              Atom
                Name('i')
                LtE('<=')
                Num('2')
              GoTo
                Name('while_branch.15')
              GoTo
                Name('while_after.0')
          ]
        Block
          Name('while_branch.15')
          [
            IfElse
              Atom
                Name('var')
                Gt('>')
                Num('100')
              [
                GoTo
                  Name('if.14')
              ]
              [
                GoTo
                  Name('else.13')
              ]
          ]
        Block
          Name('if.14')
          [
            Assign
              Name('var2')
              Num('0')
            GoTo
              Name('if_else_after.4')
          ]
        Block
          Name('else.13')
          [
            Assign
              Name('tmp.1)')
              BinOp
                Num('42')
                Div('/')
                Name('i')
            IfElse
              Atom
                Name('var')
                Gt('>')
                Name('tmp.1)')
              [
                GoTo
                  Name('if.12')
              ]
              [
                GoTo
                  Name('else.6')
              ]
          ]
        Block
          Name('if.12')
          [
            IfElse
              Num('0')
              [
                GoTo
                  Name('if.11')
              ]
              [
                GoTo
                  Name('else.10')
              ]
          ]
        Block
          Name('if.11')
          [
            Assign
              Name('var2')
              Num('1')
            GoTo
              Name('if_else_after.7')
          ]
        Block
          Name('else.10')
          [
            If
              BinOp
                Name('var')
                Add('+')
                Num('10')
              [
                GoTo
                  Name('if.9')
              ]
          ]
        Block
          Name('if.9')
          [
            Assign
              Name('var2')
              Num('42')
            GoTo
              Name('if_else_after.8')
          ]
        Block
          Name('if_else_after.8')
          [
            GoTo
              Name('if_else_after.7')
          ]
        Block
          Name('if_else_after.7')
          [
            GoTo
              Name('if_else_after.5')
          ]
        Block
          Name('else.6')
          [
            Assign
              Name('var2')
              Num('24')
            GoTo
              Name('if_else_after.5')
          ]
        Block
          Name('if_else_after.5')
          [
            GoTo
              Name('if_else_after.4')
          ]
        Block
          Name('if_else_after.4')
          [
            IfElse
              BinOp
                Num('4')
                Add('+')
                Num('2')
              [
                GoTo
                  Name('if.3')
              ]
              [
                GoTo
                  Name('else.2')
              ]
          ]
        Block
          Name('if.3')
          [
            Call
              Name('print')
              Name('var2')
            GoTo
              Name('if_else_after.1')
          ]
        Block
          Name('else.2')
          [
            GoTo
              Name('if_else_after.1')
          ]
        Block
          Name('if_else_after.1')
          [
            Assign
              Name('i')
              BinOp
                Name('i')
                Add('+')
                Num('1')
            GoTo
              Name('condition_check.16')
          ]
        Block
          Name('while_after.0')
          []
      ]
  ]