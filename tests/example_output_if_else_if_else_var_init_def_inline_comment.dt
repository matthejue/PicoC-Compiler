Tree(Token('RULE', 'file'), [Token('NAME', 'example_output_if_else_if_else_var_init_def_inline_comment'), Tree(Token('RULE', 'fun_def'), [Token('SIZE_QUAL', 'void'), Token('NAME', 'main'), Tree(Token('RULE', 'fun_params'), []), Tree(Token('RULE', 'decl_exec_stmts'), [Tree(Token('RULE', 'init'), [Tree(Token('RULE', 'alloc'), [Token('SIZE_QUAL', 'int'), Tree(Token('RULE', 'pntr_decl'), [Tree(Token('RULE', 'pntr_deg'), []), Tree(Token('RULE', 'array_decl'), [Token('NAME', 'var'), Tree(Token('RULE', 'array_dims'), [])])])]), Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Tree(Token('RULE', 'input_odp'), [])])]), Token('PREC2_OP', '+'), Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NUM', '1')])])])]), Tree(Token('RULE', 'alloc'), [Token('SIZE_QUAL', 'char'), Tree(Token('RULE', 'pntr_decl'), [Tree(Token('RULE', 'pntr_deg'), []), Tree(Token('RULE', 'array_decl'), [Token('NAME', 'var2'), Tree(Token('RULE', 'array_dims'), [])])])]), Tree(Token('RULE', 'if_else_stmt'), [Tree(Token('RULE', 'logic_or'), [Tree(Token('RULE', 'logic_and'), [Tree(Token('RULE', 'logic_atom'), [Tree(Token('RULE', 'to_bool'), [Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NAME', 'var')])])])]), Token('RELATION', '>'), Tree(Token('RULE', 'to_bool'), [Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NUM', '100')])])])])])])]), Tree(Token('RULE', 'var_assign'), [Token('NAME', 'var2'), Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NUM', '0')])])])]), Tree(Token('RULE', 'if_else_stmt'), [Tree(Token('RULE', 'logic_or'), [Tree(Token('RULE', 'logic_and'), [Tree(Token('RULE', 'logic_atom'), [Tree(Token('RULE', 'to_bool'), [Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NAME', 'var')])])])]), Token('RELATION', '>'), Tree(Token('RULE', 'to_bool'), [Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NUM', '10')])])])])])])]), Tree(Token('RULE', 'var_assign'), [Token('NAME', 'var2'), Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NUM', '1')])])])]), Tree(Token('RULE', 'var_assign'), [Token('NAME', 'var2'), Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NUM', '2')])])])])])]), Tree(Token('RULE', 'print_stmt'), [Tree(Token('RULE', 'arith_prec2'), [Tree(Token('RULE', 'arith_prec1'), [Tree(Token('RULE', 'un_opd'), [Token('NAME', 'var2')])])])])])])])