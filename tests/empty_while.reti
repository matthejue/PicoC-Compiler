# File 'empty_while' Start
# Main Funktion '(void main While(ToBool(99)))' Start
LOADI SP 256;
# While Statement 'While(ToBool(99) )' Start
# Logischer Wahrheitswert aus arithmetischem Ausdruck 'ToBool(99)' Start
# Arithmetischer Operand '99' Start
SUBI SP 1;                             # Stack um eine Zelle erweitern
LOADI ACC 99;                          # Wert von '99' in ACC laden
STOREIN SP ACC 1;                      # Wert in oberste Stack-Zelle
# Arithmetischer Operand '99' Ende
LOADIN SP ACC 1;                       # Wert von '99' in ACC laden
JUMP== 3;                              # Überspringe 2 Befehle, wenn '99' den Wert '0' hat
LOADI ACC 1;
STOREIN SP ACC 1;                      # Ergebnis in oberste Stack-Zelle
# Logischer Wahrheitswert aus arithmetischem Ausdruck 'ToBool(99)' Ende
LOADIN SP ACC 1;                       # Wert von 'ToBool(99)' in ACC laden
ADDI SP 1;                             # Stack um eine Zelle verkürzen
JUMP== 2;                              # Statements überspringen, wenn 'ToBool(99)' nicht erfüllt
JUMP -10;                              # Zurück zur Auswertung von 'ToBool(99)'
# While Statement 'While(ToBool(99) )' Ende
JUMP 0;
# Main Funktion '(void main While(ToBool(99)))' Ende
# File 'empty_while' Ende
